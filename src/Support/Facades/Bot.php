<?php

namespace LaraGram\Support\Facades;

/**
 * @method static \LaraGram\Listening\Listen on(string $message, callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onText(string $message, callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onCommand(string $command, callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onAnimation(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onAudio(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onDocument(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onPhoto(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onSticker(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onVideo(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onVideoNote(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onVoice(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onContact(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onDice(callable|array|string $action, string|null $emoji = 'any', int|null $value = 0)
 * @method static \LaraGram\Listening\Listen onGame(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onPoll(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onVenue(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onLocation(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onNewChatMembers(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onLeftChatMember(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onNewChatTitle(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onNewChatPhoto(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onDeleteChatPhoto(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onGroupChatCreated(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onSuperGroupChatCreated(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onMessageAutoDeleteTimerChanged(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onMigrateToChatId(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onMigrateFromChatId(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onPinnedMessage(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onInvoice(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onSuccessfulPayment(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onConnectedWebsite(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onPassportData(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onProximityAlertTriggered(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onForumTopicCreated(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onForumTopicEdited(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onForumTopicClosed(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onForumTopicReopened(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onVideoChatScheduled(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onVideoChatStarted(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onVideoChatEnded(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onVideoChatParticipantsInvited(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onWebAppData(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onMessage(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onMessageType(array|string $type, callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onEditedMessage(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onChannelPost(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onEditedChannelPost(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onInlineQuery(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onChosenInlineResult(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onCallbackQuery(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onCallbackQueryData(string $pattern, callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onShippingQuery(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onPreCheckoutQuery(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onPollAnswer(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onMyChatMember(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onChatMember(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onChatJoinRequest(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onReferral(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onAddMember(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onJoinMember(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onMention(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onHashtag(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen onCashtag(callable|array|string $action)
 * @method static \LaraGram\Listening\Listen fallback(array|string|callable|null $action)
 * @method static \LaraGram\Listening\Listen redirect(string $uri, string $destination, int $status = 302)
 * @method static \LaraGram\Listening\Listen template(string $pattern, string $template, array $data = [])
 * @method static \LaraGram\Listening\Listen match(array|string $methods, string $uri, array|string|callable|null $action = null)
 * @method static \LaraGram\Listening\Listener group(array $attributes, \Closure|array|string $listens)
 * @method static array getScopeAttribute()
 * @method static array getCanAttribute()
 * @method static bool getReplyAttribute()
 * @method static array mergeWithLastGroup(array $new, bool $prependExistingPrefix = true)
 * @method static string getLastGroupPrefix()
 * @method static \LaraGram\Listening\Listen addListen(array|string $methods, string $uri, array|string|callable|null $action)
 * @method static \LaraGram\Listening\Listen newListen(array|string $methods, string $uri, mixed $action)
 * @method static \LaraGram\Request\Response respondWithListen(string $name)
 * @method static \LaraGram\Request\Response dispatch(\LaraGram\Request\Request $request)
 * @method static \LaraGram\Request\Response dispatchToListen(\LaraGram\Request\Request $request)
 * @method static array gatherListenMiddleware(\LaraGram\Listening\Listen $listen)
 * @method static array resolveMiddleware(array $middleware, array $excluded = [])
 * @method static \LaraGram\Request\Response prepareResponse(\LaraGram\Request\Request $request, mixed $response)
 * @method static \LaraGram\Request\Response toResponse(\LaraGram\Request\Request $request, mixed $response)
 * @method static \LaraGram\Listening\Listen substituteBindings(\LaraGram\Listening\Listen $listen)
 * @method static void substituteImplicitBindings(\LaraGram\Listening\Listen $listen)
 * @method static \LaraGram\Listening\Listener substituteImplicitBindingsUsing(callable $callback)
 * @method static void matched(string|callable $callback)
 * @method static array getMiddleware()
 * @method static \LaraGram\Listening\Listener aliasMiddleware(string $name, string $class)
 * @method static bool hasMiddlewareGroup(string $name)
 * @method static array getMiddlewareGroups()
 * @method static \LaraGram\Listening\Listener middlewareGroup(string $name, array $middleware)
 * @method static \LaraGram\Listening\Listener prependMiddlewareToGroup(string $group, string $middleware)
 * @method static \LaraGram\Listening\Listener pushMiddlewareToGroup(string $group, string $middleware)
 * @method static \LaraGram\Listening\Listener removeMiddlewareFromGroup(string $group, string $middleware)
 * @method static \LaraGram\Listening\Listener flushMiddlewareGroups()
 * @method static void bind(string $key, string|callable $binder)
 * @method static void model(string $key, string $class, \Closure|null $callback = null)
 * @method static \Closure|null getBindingCallback(string $key)
 * @method static array getPatterns()
 * @method static void pattern(string $key, string $pattern)
 * @method static void patterns(array $patterns)
 * @method static bool hasGroupStack()
 * @method static array getGroupStack()
 * @method static mixed input(string $key, string|null $default = null)
 * @method static \LaraGram\Request\Request getCurrentRequest()
 * @method static \LaraGram\Listening\Listen|null getCurrentListen()
 * @method static \LaraGram\Listening\Listen|null current()
 * @method static bool has(string|array $name)
 * @method static string|null currentListenName()
 * @method static bool is(mixed ...$patterns)
 * @method static bool currentListenNamed(mixed ...$patterns)
 * @method static string|null currentListenAction()
 * @method static bool uses(array|string ...$patterns)
 * @method static bool currentListenUses(string $action)
 * @method static void singularResourceParameters(bool $singular = true)
 * @method static void resourceParameters(array $parameters = [])
 * @method static array|null resourceVerbs(array $verbs = [])
 * @method static \LaraGram\Listening\ListenCollectionInterface getListens()
 * @method static void setListens(\LaraGram\Listening\ListenCollection $listens)
 * @method static void setCompiledListens(array $listens)
 * @method static array uniqueMiddleware(array $middleware)
 * @method static \LaraGram\Listening\Listener setContainer(\LaraGram\Container\Container $container)
 * @method static mixed macroCall(string $method, array $parameters)
 * @method static \LaraGram\Support\HigherOrderTapProxy|\LaraGram\Listening\Listener tap(callable|null $callback = null)
 * @method static \LaraGram\Listening\ListenRegistrar attribute(string $key, mixed $value)
 * @method static \LaraGram\Listening\ListenRegistrar whereAlpha(array|string $parameters)
 * @method static \LaraGram\Listening\ListenRegistrar whereAlphaNumeric(array|string $parameters)
 * @method static \LaraGram\Listening\ListenRegistrar whereNumber(array|string $parameters)
 * @method static \LaraGram\Listening\ListenRegistrar whereUlid(array|string $parameters)
 * @method static \LaraGram\Listening\ListenRegistrar whereUuid(array|string $parameters)
 * @method static \LaraGram\Listening\ListenRegistrar whereIn(array|string $parameters, array $values)
 * @method static \LaraGram\Listening\ListenRegistrar as(string $value)
 * @method static \LaraGram\Listening\ListenRegistrar controller(string $controller)
 * @method static \LaraGram\Listening\ListenRegistrar connection(string $name)
 * @method static \LaraGram\Listening\ListenRegistrar middleware(array|string|null $middleware)
 * @method static \LaraGram\Listening\ListenRegistrar missing(\Closure $missing)
 * @method static \LaraGram\Listening\ListenRegistrar name(\BackedEnum|string $value)
 * @method static \LaraGram\Listening\ListenRegistrar namespace(string|null $value)
 * @method static \LaraGram\Listening\ListenRegistrar prefix(string $prefix)
 * @method static \LaraGram\Listening\ListenRegistrar scopeBindings()
 * @method static \LaraGram\Listening\ListenRegistrar where(array $where)
 * @method static \LaraGram\Listening\ListenRegistrar withoutMiddleware(array|string $middleware)
 * @method static \LaraGram\Listening\ListenRegistrar withoutScopedBindings()
 * @method static \LaraGram\Listening\ListenRegistrar scope(array|string $scopes)
 * @method static \LaraGram\Listening\ListenRegistrar outOfScope(array|string $scopes)
 * @method static \LaraGram\Listening\ListenRegistrar can(array|string $roles)
 * @method static \LaraGram\Listening\ListenRegistrar canNot(array|string $roles)
 * @method static \LaraGram\Listening\ListenRegistrar hasReply()
 * @method static \LaraGram\Listening\ListenRegistrar hasNotReply()
 * @method static void macro(string $name, object|callable $macro)
 * @method static void mixin(object $mixin, bool $replace = true)
 * @method static bool hasMacro(string $name)
 * @method static void flushMacros()
 */
class Bot extends Facade
{
    /**
     * Get the registered name of the component.
     *
     * @return string
     */
    protected static function getFacadeAccessor(): string
    {
        return 'listener';
    }
}